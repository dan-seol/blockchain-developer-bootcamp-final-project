// SPDX-License-Identifier: MIT
pragma solidity 0.8.11;

import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/utils/Counters.sol";


/// @title An NFT containing image of a senryu (or haiku, if you want to stick to a specific topic)
/// @author Dan Yunheum Seol (dan-seol)
/// @notice You can use this contract to mint a senryu nft
contract SenryuNFT is ERC721URIStorage, Ownable {
        
    using Counters for Counters.Counter;

    Counters.Counter private _tokenIds;

    event NFTMinted(uint256 tokenId, address unlockerAddress);

    constructor() ERC721("SenryuNFT", "NFT") {
    }

    /// @notice Mint the NFT
    /// @dev A standard ERC721 minting
    /// @param tokenURI is the nft metadata
    /// @return the new token id generated by the counter
    function mintNFT(string memory tokenURI) public onlyOwner returns (uint256) {
        _tokenIds.increment();

        uint256 newTokenId = _tokenIds.current();
        _mint(msg.sender, newTokenId);
        emit NFTMinted(newTokenId, msg.sender);
        _setTokenURI(newTokenId, tokenURI);

        return newTokenId;
    }  
}